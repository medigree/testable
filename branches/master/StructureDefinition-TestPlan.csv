"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)","Mapping: RIM Mapping"
"TestPlan","TestPlan","","","",0,*,"","","","","Test Plan","Test Plan","","","","","","","","","",,,,,"",,,,"Base",0,*,"","","n/a"
"TestPlan.url","TestPlan.url","","","",0,1,"","","","uri {[]} {[]}
","canonical identifier","canonical identifier","","","","","","","","","",,,,,"",,,,"TestPlan.url",0,1,"",""
"TestPlan.identifier","TestPlan.identifier","","","",0,*,"","","","Identifier {[]} {[]}
","Business identifier","Business identifier","","","","","","","","","",,,,,"",,,,"TestPlan.identifier",0,*,"",""
"TestPlan.version","TestPlan.version","","","",0,*,"","","","string {[]} {[]}
","version","version","","","","","","","","","",,,,,"",,,,"TestPlan.version",0,*,"",""
"TestPlan.name","TestPlan.name","","","",0,*,"","","","string {[]} {[]}
","Name","Name","","","","","","","","","",,,,,"",,,,"TestPlan.name",0,*,"",""
"TestPlan.title","TestPlan.title","","","",0,*,"","","","string {[]} {[]}
","Title","Title","","","","","","","","","",,,,,"",,,,"TestPlan.title",0,*,"",""
"TestPlan.status","TestPlan.status","","","",0,*,"","","","code {[]} {[]}
","Status","Status","","","","","","","","","",,,,,"",,,,"TestPlan.status",0,*,"",""
"TestPlan.date","TestPlan.date","","","",0,*,"","","","dateTime {[]} {[]}
","date","date","","","","","","","","","",,,,,"",,,,"TestPlan.date",0,*,"",""
"TestPlan.publisher","TestPlan.publisher","","","",0,*,"","","","string {[]} {[]}
","Publisher","Publisher","","","","","","","","","",,,,,"",,,,"TestPlan.publisher",0,*,"",""
"TestPlan.contact","TestPlan.contact","","","",0,*,"","","","ContactDetail {[]} {[]}
","Contact","Contact","","","","","","","","","",,,,,"",,,,"TestPlan.contact",0,*,"",""
"TestPlan.description","TestPlan.description","","","",0,1,"","","","markdown {[]} {[]}
","Description","Description","","","","","","","","","",,,,,"",,,,"TestPlan.description",0,1,"",""
"TestPlan.jurisdiction","TestPlan.jurisdiction","","","",0,*,"","","","CodeableConcept {[]} {[]}
","Jurisdiction","Jurisdiction","","","","","","","","","",,,,,"",,,,"TestPlan.jurisdiction",0,*,"",""
"TestPlan.purpose","TestPlan.purpose","","","",0,1,"","","","markdown {[]} {[]}
","purpose","purpose","","","","","","","","","",,,,,"",,,,"TestPlan.purpose",0,1,"",""
"TestPlan.copyright","TestPlan.copyright","","","",0,1,"","","","markdown {[]} {[]}
","Copyright","Copyright","","","","","","","","","",,,,,"",,,,"TestPlan.copyright",0,1,"",""
"TestPlan.category","TestPlan.category","","","",0,*,"","","","CodeableConcept {[]} {[]}
","The category of the Test Plan - can be acceptance, unit, performance,...","The category of the Test Plan - can be acceptance, unit, performance,...","","","","","","","","","",,,,,"",,,,"TestPlan.category",0,*,"",""
"TestPlan.scope","TestPlan.scope","","","",0,*,"","","","Reference {[]} {[]}
","What is being tested with this Test Plan - a conformance resource, or narrative criteria, or an external reference...","What is being tested with this Test Plan - a conformance resource, or narrative criteria, or an external reference...","","","","","","","","","",,,,,"",,,,"TestPlan.scope",0,*,"",""
"TestPlan.testTools","TestPlan.testTools","","","",0,1,"","","","markdown {[]} {[]}
","A description of test tools to be used in the test plan - narrative for now","A description of test tools to be used in the test plan - narrative for now","","","","","","","","","",,,,,"",,,,"TestPlan.testTools",0,1,"",""
"TestPlan.dependencies","TestPlan.dependencies","","","",0,*,"","","","BackboneElement {[]} {[]}
","The required criteria to execute the test plan - e.g. preconditions, previous tests...","The required criteria to execute the test plan - e.g. preconditions, previous tests...","","","","","","","","","",,,,,"",,,,"TestPlan.dependencies",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"TestPlan.dependencies.id","TestPlan.dependencies.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.dependencies.extension","TestPlan.dependencies.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.dependencies.modifierExtension","TestPlan.dependencies.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://build.fhir.org/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","N/A"
"TestPlan.dependencies.description","TestPlan.dependencies.description","","","",0,1,"","","","markdown {[]} {[]}
","description of the criteria","description of the criteria","","","","","","","","","",,,,,"",,,,"TestPlan.dependencies.description",0,1,"",""
"TestPlan.dependencies.predecessor","TestPlan.dependencies.predecessor","","","",0,1,"","","","Reference {[]} {[]}
","link to predecessor test plans","link to predecessor test plans","","","","","","","","","",,,,,"",,,,"TestPlan.dependencies.predecessor",0,1,"",""
"TestPlan.exitCriteria","TestPlan.exitCriteria","","","",0,1,"","","","markdown {[]} {[]}
","The threshold or criteria for the test plan to be considered successfully executed - narrative","The threshold or criteria for the test plan to be considered successfully executed - narrative","","","","","","","","","",,,,,"",,,,"TestPlan.exitCriteria",0,1,"",""
"TestPlan.testCase","TestPlan.testCase","","","",0,*,"","","","BackboneElement {[]} {[]}
","The test cases that are part of this plan","The test cases that are part of this plan","","","","","","","","","",,,,,"",,,,"TestPlan.testCase",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"TestPlan.testCase.id","TestPlan.testCase.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.testCase.extension","TestPlan.testCase.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.testCase.modifierExtension","TestPlan.testCase.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://build.fhir.org/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","N/A"
"TestPlan.testCase.sequence","TestPlan.testCase.sequence","","","",0,1,"","","","integer {[]} {[]}
","Sequence of testing","Sequence of testing","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.sequence",0,1,"",""
"TestPlan.testCase.scope","TestPlan.testCase.scope","","","",0,*,"","","","Reference {[]} {[]}
","Specific test scope for one test case","Specific test scope for one test case","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.scope",0,*,"",""
"TestPlan.testCase.dependencies","TestPlan.testCase.dependencies","","","",0,*,"","","","BackboneElement {[]} {[]}
","The required criteria to execute the test case - e.g. preconditions, previous tests...","The required criteria to execute the test case - e.g. preconditions, previous tests...","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.dependencies",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"TestPlan.testCase.dependencies.id","TestPlan.testCase.dependencies.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.testCase.dependencies.extension","TestPlan.testCase.dependencies.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.testCase.dependencies.modifierExtension","TestPlan.testCase.dependencies.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://build.fhir.org/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","N/A"
"TestPlan.testCase.dependencies.description","TestPlan.testCase.dependencies.description","","","",0,1,"","","","markdown {[]} {[]}
","description of the criteria","description of the criteria","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.dependencies.description",0,1,"",""
"TestPlan.testCase.dependencies.predecessor","TestPlan.testCase.dependencies.predecessor","","","",0,1,"","","","Reference {[]} {[]}
","link to predecessor test plans","link to predecessor test plans","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.dependencies.predecessor",0,1,"",""
"TestPlan.testCase.testRun","TestPlan.testCase.testRun","","","",0,*,"","","","Reference {[]} {[]}
","The actual test to be executed","The actual test to be executed","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testRun",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ref-1:SHALL have a contained resource if a local reference is provided {reference.exists()  implies (reference.startsWith('#').not() or (reference.substring(1).trace('url') in %rootResource.contained.id.trace('ids')) or (reference='#' and %rootResource!=%resource))}ref-2:At least one of reference, identifier and display SHALL be present (unless an extension is provided). {reference.exists() or identifier.exists() or display.exists() or extension.exists()}"
"TestPlan.testCase.testRun.id","TestPlan.testCase.testRun.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.testCase.testRun.extension","TestPlan.testCase.testRun.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.testCase.testRun.reference","TestPlan.testCase.testRun.reference","","","",0,1,"","","Y","string {[]} {[]}
","Literal reference, Relative, internal or absolute URL","A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.","Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use when trading across closed eco-system boundaries.   Absolute URLs do not need to point to a FHIR RESTful server, though this is the preferred approach. If the URL conforms to the structure ""[type]/[id]"" then it should be assumed that the reference is to a FHIR RESTful server.","","","","","","","","",,,,,"",,,,"Reference.reference",0,1,"ref-1
","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
","N/A"
"TestPlan.testCase.testRun.type","TestPlan.testCase.testRun.type","","","",0,1,"","","Y","uri {[]} {[]}
","Type the reference refers to (e.g. ""Patient"") - must be a resource in resources","The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.

The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. ""Patient"" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).","This element is used to indicate the type of  the target of the reference. This may be used which ever of the other elements are populated (or not). In some cases, the type of the target may be determined by inspection of the reference (e.g. a RESTful URL) or by resolving the target of the reference; if both the type and a reference is provided, the reference SHALL resolve to a resource of the same type as that specified.","","","","","","","","",,"extensible","","http://hl7.org/fhir/ValueSet/resource-types","",,,,"Reference.type",0,1,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
","N/A"
"TestPlan.testCase.testRun.identifier","TestPlan.testCase.testRun.identifier","","","",0,1,"","","Y","Identifier {[]} {[]}
","Logical reference, when literal reference is not known","An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.","When an identifier is provided in place of a reference, any system processing the reference will only be able to resolve the identifier to a reference if it understands the business context in which the identifier is used. Sometimes this is global (e.g. a national identifier) but often it is not. For this reason, none of the useful mechanisms described for working with references (e.g. chaining, includes) are possible, nor should servers be expected to be able resolve the reference. Servers may accept an identifier based reference untouched, resolve it, and/or reject it - see CapabilityStatement.rest.resource.referencePolicy. 

When both an identifier and a literal reference are provided, the literal reference is preferred. Applications processing the resource are allowed - but not required - to check that the identifier matches the literal reference

Applications converting a logical reference to a literal reference may choose to leave the logical reference present, or remove it.

Reference is intended to point to a structure that can potentially be expressed as a FHIR resource, though there is no need for it to exist as an actual FHIR resource instance - except in as much as an application wishes to actual find the target of the reference. The content referred to be the identifier must meet the logical constraints implied by any limitations on what resource types are permitted for the reference.  For example, it would not be legitimate to send the identifier for a drug prescription if the type were Reference(Observation|DiagnosticReport).  One of the use-cases for Reference.identifier is the situation where no FHIR representation exists (where the type is Reference (Any).

This element only allows for a single identifier. In the case where additional identifers are required, use the [additional identifiers](http://build.fhir.org/extension-additionalidentifier.html) extension.","","","","","","","","",,,,,"",,,,"Reference.identifier",0,1,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
",".identifier"
"TestPlan.testCase.testRun.display","TestPlan.testCase.testRun.display","","","",0,1,"","","Y","string {[]} {[]}
","Text alternative for the resource","Plain text narrative that identifies the resource in addition to the resource reference.","This is generally not the same as the Resource.text of the referenced resource.  The purpose is to identify what's being referenced, not to fully describe it.","","","","","","","","",,,,,"",,,,"Reference.display",0,1,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
","N/A"
"TestPlan.testCase.testRun.narrative","TestPlan.testCase.testRun.narrative","","","",0,1,"","","","markdown {[]} {[]}
","The narrative description of the tests","The narrative description of the tests","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testRun.narrative",0,1,"",""
"TestPlan.testCase.testRun.script","TestPlan.testCase.testRun.script","","","",0,1,"","","","BackboneElement {[]} {[]}
","The test cases in a structured language e.g. gherkin, Postman, or FHIR TestScript","The test cases in a structured language e.g. gherkin, Postman, or FHIR TestScript","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testRun.script",0,1,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"TestPlan.testCase.testRun.script.id","TestPlan.testCase.testRun.script.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.testCase.testRun.script.extension","TestPlan.testCase.testRun.script.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.testCase.testRun.script.modifierExtension","TestPlan.testCase.testRun.script.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://build.fhir.org/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","N/A"
"TestPlan.testCase.testRun.script.language","TestPlan.testCase.testRun.script.language","","","",0,1,"","","","CodeableConcept {[]} {[]}
","The language for the test cases e.g. 'gherkin', 'testscript'","The language for the test cases e.g. 'gherkin', 'testscript'","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testRun.script.language",0,1,"",""
"TestPlan.testCase.testRun.script.source[x]","TestPlan.testCase.testRun.script.source[x]","","","",0,1,"","","","string {[]} {[]}
Reference {[]} {[]}","The actual content of the cases - references to TestScripts or externally defined content","The actual content of the cases - references to TestScripts or externally defined content","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testRun.script.source[x]",0,1,"",""
"TestPlan.testCase.testData","TestPlan.testCase.testData","","","",0,*,"","","","BackboneElement {[]} {[]}
","The test data used in the test case","The test data used in the test case","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testData",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"TestPlan.testCase.testData.id","TestPlan.testCase.testData.id","","","",0,1,"","","","id {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"","","n/a"
"TestPlan.testCase.testData.extension","TestPlan.testCase.testData.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","n/a"
"TestPlan.testCase.testData.modifierExtension","TestPlan.testCase.testData.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://build.fhir.org/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}","N/A"
"TestPlan.testCase.testData.type","TestPlan.testCase.testData.type","","","",1,1,"","","","Coding {[]} {[]}
","The type of test data description, e.g. 'synthea'","The type of test data description, e.g. 'synthea'","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testData.type",1,1,"",""
"TestPlan.testCase.testData.content","TestPlan.testCase.testData.content","","","",0,1,"","","","Reference {[]} {[]}
","The actual test resources when they exist","The actual test resources when they exist","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testData.content",0,1,"",""
"TestPlan.testCase.testData.source[x]","TestPlan.testCase.testData.source[x]","","","",0,1,"","","","string {[]} {[]}
Reference {[]} {[]}","Pointer to a definition of test resources - narrative or structured e.g. synthetic data generation, et.","Pointer to a definition of test resources - narrative or structured e.g. synthetic data generation, et.","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.testData.source[x]",0,1,"",""
"TestPlan.testCase.assertions","TestPlan.testCase.assertions","","","",0,*,"","","","BackboneElement {[]} {[]}
","The test data used in the test case","The test data used in the test case","","","","","","","","","",,,,,"",,,,"TestPlan.testCase.assertions",0,*,"",""
